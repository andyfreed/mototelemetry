[
    {
        "id": "motorcycle-dashboard",
        "type": "tab",
        "label": "üèçÔ∏è Motorcycle Dashboard",
        "disabled": false,
        "info": "Motorcycle telemetry dashboard with embedded GPS map"
    },
    {
        "id": "inject-timer",
        "type": "inject",
        "z": "motorcycle-dashboard",
        "name": "Every 2 seconds",
        "props": [{"p": "payload"}],
        "repeat": "2",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 100,
        "wires": [["get-latest-data"]]
    },
    {
        "id": "get-latest-data",
        "type": "exec",
        "z": "motorcycle-dashboard",
        "command": "sqlite3 /home/pi/motorcycle_data/telemetry.db \"SELECT ax, ay, az, COALESCE(latitude, 0) as latitude, COALESCE(longitude, 0) as longitude, COALESCE(speed_mph, 0) as speed_mph FROM telemetry_data ORDER BY timestamp DESC LIMIT 1\" -json",
        "addpay": "",
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "Query SQLite",
        "x": 350,
        "y": 100,
        "wires": [["parse-json"], ["debug-error"], ["debug-error"]]
    },
    {
        "id": "parse-json",
        "type": "function",
        "z": "motorcycle-dashboard",
        "name": "Parse JSON Result",
        "func": "try {\n    if (msg.payload && typeof msg.payload === 'string' && msg.payload.trim()) {\n        const jsonData = JSON.parse(msg.payload.trim());\n        if (jsonData && Array.isArray(jsonData) && jsonData.length > 0) {\n            msg.payload = jsonData;\n            return msg;\n        }\n    }\n} catch (e) {\n    node.warn(\"JSON Parse Error: \" + e.message + \" | Payload: '\" + msg.payload + \"'\");\n}\nreturn null;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 100,
        "wires": [["process-data"]]
    },
    {
        "id": "debug-error",
        "type": "debug",
        "z": "motorcycle-dashboard",
        "name": "SQLite Error",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 520,
        "y": 160,
        "wires": []
    },
    {
        "id": "process-data",
        "type": "function",
        "z": "motorcycle-dashboard",
        "name": "Calculate G-Forces & Lean",
        "func": "if (msg.payload && msg.payload.length > 0) {\n    const data = msg.payload[0];\n    \n    // Calibration constants\n    const X_OFFSET = 6200;\n    const Y_OFFSET = 100;\n    const Z_OFFSET = 15400;\n    const SCALE = 16384;\n    \n    // Calculate G-forces\n    const forwardG = (data.ax - X_OFFSET) / SCALE;\n    const lateralG = (data.ay - Y_OFFSET) / SCALE;\n    const verticalG = (data.az - Z_OFFSET) / SCALE;\n    \n    // Calculate lean angle in degrees\n    const leanAngle = Math.asin(Math.max(-1, Math.min(1, lateralG))) * 57.3;\n    \n    // GPS coordinates with fallback to default location if no GPS\n    const hasGPS = data.latitude !== 0 || data.longitude !== 0;\n    const lat = hasGPS ? parseFloat(data.latitude) : 51.5074; // London default\n    const lon = hasGPS ? parseFloat(data.longitude) : -0.1278;\n    \n    // Create separate messages for each gauge\n    const messages = [\n        { topic: 'lean_angle', payload: parseFloat(leanAngle.toFixed(1)) },\n        { topic: 'forward_g', payload: parseFloat(forwardG.toFixed(3)) },\n        { topic: 'lateral_g', payload: parseFloat(lateralG.toFixed(3)) },\n        { topic: 'speed', payload: parseFloat(data.speed_mph || 0) },\n        { \n            topic: 'gps', \n            payload: {\n                lat: lat,\n                lon: lon,\n                name: hasGPS ? 'Motorcycle' : 'No GPS Signal',\n                icon: hasGPS ? 'motorcycle' : 'question',\n                iconColor: hasGPS ? 'blue' : 'red'\n            }\n        },\n        { \n            topic: 'map_iframe', \n            payload: `<iframe src=\"/worldmap\" width=\"100%\" height=\"300\" frameborder=\"0\" style=\"border-radius: 8px;\"></iframe>`\n        }\n    ];\n    \n    return messages;\n}\nreturn null;",
        "outputs": 6,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 100,
        "wires": [
            ["lean-gauge", "data-counter"],
            ["forward-g-gauge"], 
            ["lateral-g-gauge"],
            ["speed-gauge"],
            ["gps-map"],
            ["map-widget"]
        ]
    },
    {
        "id": "lean-gauge",
        "type": "ui_gauge",
        "z": "motorcycle-dashboard",
        "name": "Lean Angle",
        "group": "gauges",
        "order": 1,
        "width": 4,
        "height": 4,
        "gtype": "gage",
        "title": "üèçÔ∏è Lean Angle",
        "label": "degrees",
        "format": "{{value}}¬∞",
        "min": -60,
        "max": 60,
        "colors": ["#00b500","#e6e600","#ca3838"],
        "seg1": 30,
        "seg2": 45,
        "x": 940,
        "y": 40,
        "wires": []
    },
    {
        "id": "forward-g-gauge",
        "type": "ui_gauge",
        "z": "motorcycle-dashboard",
        "name": "Forward G-Force",
        "group": "gauges",
        "order": 2,
        "width": 4,
        "height": 4,
        "gtype": "gage",
        "title": "‚ö° Forward G",
        "label": "G",
        "format": "{{value}}g",
        "min": -1.5,
        "max": 1.5,
        "colors": ["#ca3838","#e6e600","#00b500"],
        "seg1": 0.5,
        "seg2": 1.0,
        "x": 940,
        "y": 80,
        "wires": []
    },
    {
        "id": "lateral-g-gauge",
        "type": "ui_gauge",
        "z": "motorcycle-dashboard",
        "name": "Lateral G-Force",
        "group": "gauges",
        "order": 3,
        "width": 4,
        "height": 4,
        "gtype": "gage",
        "title": "üåÄ Lateral G",
        "label": "G",
        "format": "{{value}}g",
        "min": -1.2,
        "max": 1.2,
        "colors": ["#ca3838","#e6e600","#00b500"],
        "seg1": 0.4,
        "seg2": 0.8,
        "x": 940,
        "y": 120,
        "wires": []
    },
    {
        "id": "speed-gauge",
        "type": "ui_gauge",
        "z": "motorcycle-dashboard",
        "name": "Speed",
        "group": "performance",
        "order": 1,
        "width": 6,
        "height": 4,
        "gtype": "gage",
        "title": "üöÄ Speed",
        "label": "mph",
        "format": "{{value}} mph",
        "min": 0,
        "max": 120,
        "colors": ["#00b500","#e6e600","#ca3838"],
        "seg1": 45,
        "seg2": 70,
        "x": 940,
        "y": 200,
        "wires": []
    },
    {
        "id": "gps-map",
        "type": "worldmap",
        "z": "motorcycle-dashboard",
        "name": "GPS Location",
        "lat": "51.5074",
        "lon": "-0.1278",
        "zoom": "15",
        "layer": "OSM",
        "cluster": "",
        "maxage": "",
        "usermenu": "show",
        "layers": "show",
        "panit": "false",
        "panlock": "false",
        "zoomlock": "false",
        "hiderightclick": "false",
        "coords": "deg",
        "showgrid": "false",
        "allowFileDrop": "false",
        "path": "/worldmap",
        "overlist": "DR,CO,RA,DN",
        "maplist": "OSM,Esri,Nat,OPR",
        "mapname": "",
        "mapurl": "",
        "mapopt": "",
        "mapwms": false,
        "x": 940,
        "y": 260,
        "wires": []
    },
    {
        "id": "map-widget",
        "type": "ui_template",
        "z": "motorcycle-dashboard",
        "group": "map-group",
        "name": "GPS Map Widget",
        "order": 1,
        "width": 12,
        "height": 8,
        "format": "<iframe src=\"/worldmap\" width=\"100%\" height=\"350\" frameborder=\"0\" style=\"border-radius: 8px; background: #f0f0f0;\"></iframe>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 940,
        "y": 300,
        "wires": [[]]
    },
    {
        "id": "gps-status",
        "type": "ui_text",
        "z": "motorcycle-dashboard",
        "group": "gps-info",
        "order": 1,
        "width": 6,
        "height": 2,
        "name": "GPS Status",
        "label": "üõ∞Ô∏è GPS Status",
        "format": "{{msg.payload.lat === 51.5074 ? \"‚ùå No GPS Signal (showing default location)\" : \"‚úÖ GPS Active: \" + msg.payload.lat.toFixed(6) + \", \" + msg.payload.lon.toFixed(6)}}",
        "layout": "row-spread",
        "className": "",
        "x": 940,
        "y": 340,
        "wires": []
    },
    {
        "id": "status-display",
        "type": "ui_text",
        "z": "motorcycle-dashboard",
        "group": "status",
        "order": 1,
        "width": 6,
        "height": 2,
        "name": "System Status",
        "label": "üõ†Ô∏è System Status",
        "format": "‚úÖ Node-RED Active<br>üìä Updates: {{msg.payload}}",
        "layout": "row-spread",
        "className": "",
        "x": 940,
        "y": 380,
        "wires": []
    },
    {
        "id": "data-counter",
        "type": "function",
        "z": "motorcycle-dashboard",
        "name": "Count Records",
        "func": "const count = context.get('counter') || 0;\ncontext.set('counter', count + 1);\nmsg.payload = count + 1;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 380,
        "wires": [["status-display"]]
    },
    {
        "id": "gps-forwarder",
        "type": "function",
        "z": "motorcycle-dashboard",
        "name": "GPS Info",
        "func": "return msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 340,
        "wires": [["gps-status"]]
    },
    {
        "id": "gauges",
        "type": "ui_group",
        "name": "G-Force & Lean",
        "tab": "dashboard-tab",
        "order": 1,
        "disp": true,
        "width": "12",
        "collapse": false
    },
    {
        "id": "performance",
        "type": "ui_group",
        "name": "Performance",
        "tab": "dashboard-tab",
        "order": 2,
        "disp": true,
        "width": "12",
        "collapse": false
    },
    {
        "id": "map-group",
        "type": "ui_group",
        "name": "üó∫Ô∏è GPS Map",
        "tab": "dashboard-tab",
        "order": 3,
        "disp": true,
        "width": "12",
        "collapse": false
    },
    {
        "id": "gps-info",
        "type": "ui_group",
        "name": "GPS Information",
        "tab": "dashboard-tab",
        "order": 4,
        "disp": true,
        "width": "12",
        "collapse": false
    },
    {
        "id": "status",
        "type": "ui_group",
        "name": "System Status",
        "tab": "dashboard-tab",
        "order": 5,
        "disp": true,
        "width": "12",
        "collapse": false
    },
    {
        "id": "dashboard-tab",
        "type": "ui_tab",
        "name": "üèçÔ∏è Motorcycle Dashboard",
        "icon": "dashboard",
        "order": 1,
        "disabled": false,
        "hidden": false
    }
] 